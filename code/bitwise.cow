bitwise{
    preamble{ 
         +(48)   # ascii 'a'
        > +(15) <
        call{xor}
    }
    namespace{
        expand{
            [> >[>]++[-<]<-]
        }
        expand2{ # triples at +6, uses 31 cells
            < ZERO
            # use a triple expander gadget to make navigating easier, end at +3
            -[[>>> >>>[>>>]++[-<<<]<<<-]>]
            <<
        }
        xor{ # args in +0 and +1
            >  rsave(29) ZERO PUSH(28) < # save everything, then wipe
            lrestore(28) <
            
            call{inner xor}
            call{expand2}

        }
        inner{
            xor{
                # now start evaluating logical XORs per-pair
                >>> >>
                # [<]> this doesnt seem to do anything
                [
                    [   
                        > SUB > # subtract expanded pair
                        [<<<<<<+>>>>>>[-]]> # zero a digit if diff=/=0
                    ]
                    + # kickstart the compressor loop
                    [<[<<<++>>>-]<<] # start compressing bits
                    >>
                ]
                <<< PUSH < POP # copy the result to cell 1
                < POP # discard the null fid
                
                > >(29)
                lrestore(29)
                < PUSH  # put the null fid back
                >
            }
        }
    }
    bindings{
        rsave{
            PUSH >
        }
        rrestore{
            POP >
        }
        lrestore{
            POP <
        }
    }
    postamble{

    }
}